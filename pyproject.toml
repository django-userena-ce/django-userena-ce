[tool.poetry]
name = "django-userena-ce"
version = "7.0.0a1"
description = "Complete user management application for Django"
authors = ["James Meakin <django-userena-ce@jmsmkn.com>"]
license = "BSD-3-Clause"
readme = "README.md"
repository = "https://github.com/django-userena-ce/django-userena-ce"
packages = [
    { include = "userena" },
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Web Environment',
    'Framework :: Django',
    'Framework :: Django :: 3.2',
    'Framework :: Django :: 4.0',
    'Intended Audience :: Developers',
    'Operating System :: OS Independent',
    'Topic :: Utilities',
]

[tool.poetry.dependencies]
python = ">=3.6,<3.11"
easy-thumbnails = "*"
django-guardian = ">=2.0"
html2text = "*"
Django = "^3.2 || ^4.0"

[tool.poetry.dev-dependencies]
six = "*"
pytest = "*"
pytest-django = "*"
pytest-cov = "*"
coveralls = "*"
sphinx = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79
target-version = ["py37"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "userena.runtests.settings"
minversion = "6.0"
testpaths = [
    "userena/tests",
    "userena/contrib/umessages/tests",
]
python_files = "tests.py test_*.py *_tests.py tests_*.py"
addopts = "--strict-markers --showlocals"
markers = []
filterwarnings = []

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist =
    ; py37 support was officially introduced in django2.1 and dropped in 4.0
    py37-django{32}
    ; py38 support was officially introduced in django3.0
    py38-django{32,40}
    ; py39 support was officially introduced in django 2.2.17, 3.0.11 and 3.1.3
    py39-django{32,40}
    ; py310 was officially introduced in django 3.2.9 and 4.0
    py310-django{32,40}
    coverage

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310, coverage

[testenv]
allowlist_externals =
    poetry
    bash
setenv =
    PYTHONPATH = {toxinidir}
deps =
    django32: django>=3.2,<3.3
    django40: django>=4.0,<4.1
    coverage: django>=4.0,<4.1
commands =
    poetry lock
    # See https://github.com/python-poetry/poetry/issues/1745#issuecomment-648365339
    bash -c 'poetry export --dev --without-hashes -f requirements.txt | grep -v "^[dD]jango==" | poetry run pip install --no-deps -r /dev/stdin'
    poetry run pytest --basetemp={envtmpdir} {posargs}

[testenv:coverage]
passenv = COVERALLS_REPO_TOKEN
commands =
    poetry lock
    # See https://github.com/python-poetry/poetry/issues/1745#issuecomment-648365339
    bash -c 'poetry export --dev --without-hashes -f requirements.txt | grep -v "^[dD]jango==" | poetry run pip install --no-deps -r /dev/stdin'
    poetry run pytest --cov=userena {posargs}
    poetry run coveralls
"""
